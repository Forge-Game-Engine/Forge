name: Create Release

permissions:
  contents: write
  packages: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (semver)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dev
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: https://npm.pkg.github.com/
          scope: "@forge-game-engine"

      - name: Bump version
        run: npm version ${{ github.event.inputs.release_type }} --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Get new version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build package
        run: npm run build

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

      - name: Commit, tag, and push to release branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          RELEASE_BRANCH="release/v$VERSION"
          git checkout -b $RELEASE_BRANCH

          git add package.json package-lock.json
          git commit -m "chore(release): v$VERSION" || echo "No changes to commit"

          git tag v$VERSION
          git push origin $RELEASE_BRANCH
          git push origin v$VERSION

      - name: Create PR into main and enable auto-merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create PR to main
          MAIN_PR_URL=$(gh pr create \
            --base main \
            --head release/v$VERSION \
            --title "Release v$VERSION" \
            --body "Automated release PR for v$VERSION")

          # Enable auto-merge for main PR
          gh pr merge "$MAIN_PR_URL" --auto --rebase

          echo "Waiting for 'main' to be updated before opening PR into dev..."
          while [[ "$(gh api repos/${{ github.repository }}/branches/main | jq -r '.commit.sha')" == "$(gh api repos/${{ github.repository }}/pulls --state open --head release/v$VERSION --base main | jq -r '.[0].head.sha')" ]]; do
            echo "Main branch not updated yet... waiting"
            sleep 5
          done

          # Now create PR from main into dev
          SYNC_PR_URL=$(gh pr create \
            --base dev \
            --head main \
            --title "Sync release v$VERSION to dev" \
            --body "Syncing the latest release changes from main into dev")

          gh pr merge "$SYNC_PR_URL" --auto --rebase
