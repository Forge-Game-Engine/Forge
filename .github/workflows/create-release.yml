name: Create Release

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (semver)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout dev
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}


      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: https://npm.pkg.github.com/
          scope: "@forge-game-engine"

      - name: Bump version
        run: |
          npm version ${{ github.event.inputs.release_type }} --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Get new version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build package
        run: npm run build

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

      - name: Commit and push release
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          APP_ID: ${{ vars.APP_ID }}
        run: |
          git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'

          git remote set-url origin https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/${{ github.repository }}
              
          git add package.json package-lock.json
          git commit -m "chore(release): v$VERSION" || echo "No changes to commit"
        
          git tag v$VERSION
        
          echo "=========================="
          git remote -v
          echo "=========================="
          git log -1 --pretty=full
          echo "=========================="

          git push origin HEAD:main
          git push origin HEAD:dev
          git push origin v$VERSION

